{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","Header","title","onAdd","showAdd","location","useLocation","pathname","FaTimesstyle","cursor","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.c02d03c5.chunk.js","sourcesContent":["import { PropTypes } from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\"\r\n};\r\n\r\nButton.protoTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation();\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      {\n        location.pathname === '/' &&\n          <Button\r\n          color={showAdd ? \"red\" : \"green\"}\r\n          text={showAdd ? \"Close\" : \"Add\"}\r\n          onClick={onAdd}\r\n          />\n      }\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder && 'reminder'}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes style={FaTimesstyle} onClick={() => onDelete(task.id)} />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FaTimesstyle = {\r\n  color: \"red\",\r\n  cursor: \"pointer\"\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task!\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n        <label>Add Day and Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add day and time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import {Link} from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  )\n}\n\nexport default Footer;","import { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to=\"/\">Go Back</Link>\n    </div>\n  )\n}\n\nexport default About;","import Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Tasks from \"./components/Tasks\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n\n    getTasks();\n  }, [])\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n\n      return data;\n  }\n\n  // Fetch task\n  const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`);\n      const data = await res.json();\n\n      return data;\n  }\n\n  // Add tasks\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/JSON'\n      },\n      body: JSON.stringify(task)\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {\n      ...taskToToggle, \n      reminder: !taskToToggle.reminder\n    }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/JSON'\n      },\n      body: JSON.stringify(updTask)\n    });\n\n  const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        \n        <Route path=\"/\" exact render = {(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n            ) : (\n              \"No tasks yay\"\n            )}\n          </>\n        )} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}